# file: cipher.py is a program that implements a simple encoder-decoder that uses a Caesar cipher
# input: strings and files
# output: string

# read text from a file and return text as a string
# the function should contain an input statement, open file statement,
# and try-except statement
def readfile(file):
    try:
        with open(file, "r") as file:
            message2 = file.read()
    except IOError:
        print("File cannot be opened")
    else:
        return message2

# write a string (message) to a file
# the function should contain an input statement, open file statement,
# and try-except statement
def writefile(message2):
    try:
        with open(code, "w") as file2:
            message3 = file2.write(message2)
    except IOError:
        print("Write file cannot be opened")
    else:
        return message3


# make a list (tuple) of letters in the English alphabet
def make_alphabet():
   alphabet = ()
   for i in range(26):
       char = i + 65
       alphabet += (chr(char),)
   #print (alphabet)
   return alphabet

# encode text letter by letter using a Caesar cipher
# return a list of encoded symbols
def encode(plaintext):
   plaintext = plaintext.upper()
   shift = 3
   ciphertext = []
   alphabet = make_alphabet()
   length = len(alphabet)
   for char in plaintext:
       found = False
       for i in range(length):
           if char == alphabet[i]:
               letter = alphabet[(i + shift) % length]
               ciphertext.append(letter)
               found = True
               break
       if not found:
           ciphertext.append(char)
   return ciphertext

# decode text letter by letter using a Caesar cipher
# return a list of decoded symbols
# check how the function encode() is implemented
# your implementation of the function decode() can be very similar
# to the implementation of the function encode()
def decode(text):
    text = text.upper()
    shift = -3
    plaintext = []
    alphabet = make_alphabet()
    length = len(alphabet)
    for char in text:
        found = False
        for i in range(length):
            if char == alphabet[i]:
               letter = alphabet[(i + shift) % length]
               plaintext.append(letter)
               found = True
               break
        if not found:
            plaintext.append(char)
    return plaintext

# convert a list into a string
# for example, the list ["A", "B", "C"] to the string "ABC" or
# the list ["H", "O", "W", " ", "A", "R", "E", " ", "Y", "O", "U", "?"] to the string "HOW ARE YOU?"
def to_string(text):
   s = ""
   for letter in text:
       s += letter
   return s

# main program
done = True
while done == True:
    user_choice = input("\nWould you like to encode or decode the message?" + "\n" + "Type E to encode, D to decode, or Q to quit: \n").upper()

    if user_choice == "E":
        message = input("Please enter a file for reading:\n")
        code = input("Please enter a file for writing:\n")
        text = readfile(message) # file passed in to open and read
        cipher_text = to_string(encode(text))
        writefile(cipher_text)
        print("\nPlaintext:\n" + text)
        print("\nCiphertext:\n" + cipher_text + "\n")
    elif user_choice == "D":
        #decode message
        message = input("Please enter a file for reading:\n")
        code = input("Please enter a file for writing:\n")
        text = readfile(message)
        decipher_text = to_string(decode(text))
        writefile(decipher_text)
        print("\nCiphertext:\n" + text)
        print("\nPlaintext:\n" + decipher_text)
    elif user_choice == "Q":
        print("\nGoodbye!")
        done = False
    else:
        print("Entered the wrong input.")



